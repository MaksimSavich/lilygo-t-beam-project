/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.9.1 */

#ifndef PB_PACKET_PB_H_INCLUDED
#define PB_PACKET_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Enum definitions */
typedef enum _PacketType {
    PacketType_UNSPECIFIED = 0,
    PacketType_SETTINGS = 1,
    PacketType_TRANSMISSION = 2,
    PacketType_RECEPTION = 3
} PacketType;

typedef enum _FuncState {
    FuncState_TRANSMITTER = 0,
    FuncState_RECEIVER = 1
} FuncState;

/* Struct definitions */
typedef struct _Settings {
    float frequency;
    int32_t power;
    float bandwidth;
    int32_t spreading_factor;
    int32_t coding_rate;
    int32_t preamble;
    bool set_crc;
    uint32_t sync_word;
    FuncState func_state;
} Settings;

typedef PB_BYTES_ARRAY_T(255) Transmission_payload_t;
typedef struct _Transmission {
    Transmission_payload_t payload;
} Transmission;

typedef PB_BYTES_ARRAY_T(255) Reception_payload_t;
typedef struct _Reception {
    bool crc_error;
    bool general_error;
    double latitude;
    double longitude;
    uint32_t sattelites;
    float rssi;
    float snr;
    Reception_payload_t payload;
} Reception;


#ifdef __cplusplus
extern "C" {
#endif

/* Helper constants for enums */
#define _PacketType_MIN PacketType_UNSPECIFIED
#define _PacketType_MAX PacketType_RECEPTION
#define _PacketType_ARRAYSIZE ((PacketType)(PacketType_RECEPTION+1))

#define _FuncState_MIN FuncState_TRANSMITTER
#define _FuncState_MAX FuncState_RECEIVER
#define _FuncState_ARRAYSIZE ((FuncState)(FuncState_RECEIVER+1))

#define Settings_func_state_ENUMTYPE FuncState




/* Initializer values for message structs */
#define Settings_init_default                    {0, 0, 0, 0, 0, 0, 0, 0, _FuncState_MIN}
#define Transmission_init_default                {{0, {0}}}
#define Reception_init_default                   {0, 0, 0, 0, 0, 0, 0, {0, {0}}}
#define Settings_init_zero                       {0, 0, 0, 0, 0, 0, 0, 0, _FuncState_MIN}
#define Transmission_init_zero                   {{0, {0}}}
#define Reception_init_zero                      {0, 0, 0, 0, 0, 0, 0, {0, {0}}}

/* Field tags (for use in manual encoding/decoding) */
#define Settings_frequency_tag                   1
#define Settings_power_tag                       2
#define Settings_bandwidth_tag                   3
#define Settings_spreading_factor_tag            4
#define Settings_coding_rate_tag                 5
#define Settings_preamble_tag                    6
#define Settings_set_crc_tag                     7
#define Settings_sync_word_tag                   8
#define Settings_func_state_tag                  9
#define Transmission_payload_tag                 1
#define Reception_crc_error_tag                  1
#define Reception_general_error_tag              2
#define Reception_latitude_tag                   3
#define Reception_longitude_tag                  4
#define Reception_sattelites_tag                 5
#define Reception_rssi_tag                       6
#define Reception_snr_tag                        7
#define Reception_payload_tag                    8

/* Struct field encoding specification for nanopb */
#define Settings_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, FLOAT,    frequency,         1) \
X(a, STATIC,   SINGULAR, INT32,    power,             2) \
X(a, STATIC,   SINGULAR, FLOAT,    bandwidth,         3) \
X(a, STATIC,   SINGULAR, INT32,    spreading_factor,   4) \
X(a, STATIC,   SINGULAR, INT32,    coding_rate,       5) \
X(a, STATIC,   SINGULAR, INT32,    preamble,          6) \
X(a, STATIC,   SINGULAR, BOOL,     set_crc,           7) \
X(a, STATIC,   SINGULAR, UINT32,   sync_word,         8) \
X(a, STATIC,   SINGULAR, UENUM,    func_state,        9)
#define Settings_CALLBACK NULL
#define Settings_DEFAULT NULL

#define Transmission_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, BYTES,    payload,           1)
#define Transmission_CALLBACK NULL
#define Transmission_DEFAULT NULL

#define Reception_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, BOOL,     crc_error,         1) \
X(a, STATIC,   SINGULAR, BOOL,     general_error,     2) \
X(a, STATIC,   SINGULAR, DOUBLE,   latitude,          3) \
X(a, STATIC,   SINGULAR, DOUBLE,   longitude,         4) \
X(a, STATIC,   SINGULAR, UINT32,   sattelites,        5) \
X(a, STATIC,   SINGULAR, FLOAT,    rssi,              6) \
X(a, STATIC,   SINGULAR, FLOAT,    snr,               7) \
X(a, STATIC,   SINGULAR, BYTES,    payload,           8)
#define Reception_CALLBACK NULL
#define Reception_DEFAULT NULL

extern const pb_msgdesc_t Settings_msg;
extern const pb_msgdesc_t Transmission_msg;
extern const pb_msgdesc_t Reception_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define Settings_fields &Settings_msg
#define Transmission_fields &Transmission_msg
#define Reception_fields &Reception_msg

/* Maximum encoded size of messages (where known) */
#define PACKET_PB_H_MAX_SIZE                     Reception_size
#define Reception_size                           296
#define Settings_size                            64
#define Transmission_size                        258

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
