/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.9.1 */

#ifndef PB_SETTINGS_PB_H_INCLUDED
#define PB_SETTINGS_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _Settings {
    float frequency;
    int32_t power;
    float bandwidth;
    int32_t spreading_factor;
    int32_t coding_rate;
    int32_t preamble;
    bool set_crc;
    uint32_t sync_word;
} Settings;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define Settings_init_default                    {0, 0, 0, 0, 0, 0, 0, 0}
#define Settings_init_zero                       {0, 0, 0, 0, 0, 0, 0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define Settings_frequency_tag                   1
#define Settings_power_tag                       2
#define Settings_bandwidth_tag                   3
#define Settings_spreading_factor_tag            4
#define Settings_coding_rate_tag                 5
#define Settings_preamble_tag                    6
#define Settings_set_crc_tag                     7
#define Settings_sync_word_tag                   8

/* Struct field encoding specification for nanopb */
#define Settings_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, FLOAT,    frequency,         1) \
X(a, STATIC,   SINGULAR, INT32,    power,             2) \
X(a, STATIC,   SINGULAR, FLOAT,    bandwidth,         3) \
X(a, STATIC,   SINGULAR, INT32,    spreading_factor,   4) \
X(a, STATIC,   SINGULAR, INT32,    coding_rate,       5) \
X(a, STATIC,   SINGULAR, INT32,    preamble,          6) \
X(a, STATIC,   SINGULAR, BOOL,     set_crc,           7) \
X(a, STATIC,   SINGULAR, UINT32,   sync_word,         8)
#define Settings_CALLBACK NULL
#define Settings_DEFAULT NULL

extern const pb_msgdesc_t Settings_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define Settings_fields &Settings_msg

/* Maximum encoded size of messages (where known) */
#define SETTINGS_PB_H_MAX_SIZE                   Settings_size
#define Settings_size                            62

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
